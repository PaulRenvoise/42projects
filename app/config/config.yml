imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    translator: { fallback: "%locale%" }
    secret: "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale: "%locale%"
    trusted_hosts: ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id: ~
    fragments: ~
    http_method_override: true

# Twig Configuration
twig:
    debug: "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form:
        resources:
            - 'StnwDatePickerBundle:Form:fields.html.twig'

services:
    twig.extension.intl:
        class: Twig_Extensions_Extension_Intl
        tags:
            - { name: twig.extension }

# Assetic Configuration
assetic:
    debug: "%kernel.debug%"
    use_controller: false
    bundles: [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver: "%database_driver%"
        host: "%database_host%"
        port: "%database_port%"
        dbname: "%database_name%"
        user: "%database_user%"
        password: "%database_password%"
        charset: UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType
    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            default:
                mappings:
                    ApplicationSonataUserBundle: ~
                    ApplicationSonataMediaBundle: ~
                    SonataUserBundle: ~
                    SonataMediaBundle: ~
                    FOSUserBundle: ~
                    FOSMessageBundle: ~
                    SiteForumBundle: ~
                    SiteIntraBundle: ~
                    SiteTicketBundle: ~
                    SiteActivityBundle: ~
                    SiteMessageBundle: ~

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host: "%mailer_host%"
    username: "%mailer_user%"
    password: "%mailer_password%"
    spool: { type: memory }

# FOSUser Configuration
fos_user:
    db_driver: orm
    firewall_name: main
    user_class: Application\Sonata\UserBundle\Entity\User
    group:
        group_class: Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager
    service:
        user_manager: sonata.user.orm.user_manager
    change_password:
        form:
            type:               site_user_change_password
            name:               site_user_change_password_form
            validation_groups:  [ChangePassword, Default]

# SonataUser Configuration
sonata_user:
    security_acl: false
    manager_type: orm
    table:
        user_group: "fos_user_user_group"
    impersonating:
        route:                sonata_user_profile_show
    class:                  # Entity Classes
        user:               Application\Sonata\UserBundle\Entity\User
        group:              Application\Sonata\UserBundle\Entity\Group
    admin:                  # Admin Classes
        user:
            class:          Sonata\UserBundle\Admin\Entity\UserAdmin
            controller:     SonataAdminBundle:CRUD
            translation:    SonataUserBundle
        group:
            class:          Sonata\UserBundle\Admin\Entity\GroupAdmin
            controller:     SonataAdminBundle:CRUD
            translation:    SonataUserBundle
    profile:
        form:
            type: application_sonata_user_profile
            handler: sonata.user.profile.form.handler.default
            name: application_sonata_user_profile
            validation_groups: [Profile]

# SonataBlock Configuration
sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.search_result:
        sonata.admin.block.admin_list:
            contexts: [admin]
        sonata.block.service.text:
        sonata.block.service.rss:
        sonata.block.service.action:
        sonata.user.block.menu:
        sonata.user.block.account:

# SonataAdmin Configuration
sonata_admin:
    title: Panel admin
    templates:
        layout:    SiteIntraBundle:Admin:standard_layout.html.twig
        ajax:      SonataAdminBundle::ajax_layout.html.twig
        dashboard: SonataAdminBundle:Core:dashboard.html.twig
        list:      SonataAdminBundle:CRUD:list.html.twig
        show:      SonataAdminBundle:CRUD:show.html.twig
        edit:      SiteIntraBundle:Admin:edit.html.twig
    dashboard:
        blocks:
            -
                position: left
                type: sonata.admin.block.admin_list
                settings:
                    groups: [sonata_user, Forum, Tickets]
            -
                position: right
                type: sonata.admin.block.admin_list
                settings:
                    groups: [Activites, E-learning, sonata_media]


#Fr3dLdap Configuration
fr3d_ldap:
    driver:
        host:         ldap.42.fr
#        port:         636
#        version:        3
#        username: "%ldap_login%"
#        password: "%ldap_password%"
#        optReferrals: false
#        useSsl:       true   # Enable SSL negotiation.
#        useStartTls:  true   # Enable TLS negotiation.
    user:
        baseDn: dc=42, dc=fr
        filter: (&(ObjectClass=ft-user))
        attributes:
            - { ldap_attr: uid,  user_method: setUsername }
            - { ldap_attr: alias, user_method: setEmail }
            - { ldap_attr: first-name, user_method: setFirstname }
            - { ldap_attr: last-name, user_method: setLastname }
            - { ldap_attr: picture, user_method: setAvatar }

# KnpPaginator Configuration
knp_paginator:
    page_range: 5                      # default page range used in pagination control
    default_options:
        page_name: page                # page query parameter name
        sort_field_name: sort          # sort field query parameter name
        sort_direction_name: direction # sort direction query parameter name
        distinct: true                 # ensure distinct results, useful when ORM queries are using GROUP BY statements
    template:
        pagination: KnpPaginatorBundle:Pagination:sliding.html.twig     # sliding pagination controls template
        sortable: KnpPaginatorBundle:Pagination:sortable_link.html.twig # sort link template

# SonataMedia Configuration
sonata_media:
    default_context: default
    db_driver: doctrine_orm
    contexts:
        default:
            providers:
                - sonata.media.provider.file
            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}

    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     true

# Stfalcon Configuration
stfalcon_tinymce:
    tinymce_jquery: true

# FOSMessage Configuration
fos_message:
    db_driver: orm
    thread_class: Site\MessageBundle\Entity\Thread
    message_class: Site\MessageBundle\Entity\Message
    spam_detector: fos_message.noop_spam_detector
    new_thread_form:
        type:               site_message.new_thread_form.type
    reply_form:
        type:               site_message.reply_form.type
